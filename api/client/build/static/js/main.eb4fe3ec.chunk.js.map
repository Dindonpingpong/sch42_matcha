{"version":3,"sources":["components/info.js","components/login.js","components/sign.js","App.js","serviceWorker.js","index.js"],"names":["InfoToast","props","toggle","onClick","bind","className","Toast","isOpen","this","isShow","ToastHeader","ToastBody","message","Component","Email","for","type","class","id","placeholder","Password","SignInBtn","SignUpBtn","to","Login","handleSubmit","setState","isError","errMessage","state","Name","nameChange","e","onChange","target","name","value","data-validator","required","emailChange","aria-describedby","passChange","Sign","handleChange","data","lastName","firstName","email","password","JSON","stringify","fetch","method","headers","body","then","res","json","isSigned","signed","error","alert","handleToast","repassword","onSubmit","history","push","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.eb4fe3ec.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\r\n\r\nclass InfoToast extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle = () => this.props.onClick();\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-3 my-2 rounded\">\r\n                <Toast isOpen={this.props.isShow}>\r\n                    <ToastHeader toggle={this.toggle}>\r\n                        Message\r\n                        </ToastHeader>\r\n                    <ToastBody>\r\n                        {this.props.message}\r\n                    </ToastBody>\r\n                </Toast>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoToast;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport InfoToast from './info';\r\n\r\nclass Email extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleDropdownFormEmail1\">Email address</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail1\" placeholder=\"email@example.com\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Password extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"col-12\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"exampleDropdownFormPassword1\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"exampleDropdownFormPassword1\" placeholder=\"Password\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SignInBtn extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"col-12\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">Sign in</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SignUpBtn extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"col-12\">\r\n                <div class=\"dropdown-divider\"></div>\r\n                <Link to='/register'>\r\n                    Newbee? Sign up\r\n                </Link>\r\n                {/* <a class=\"dropdown-item\" href=\"/register\">Newbee? Sign up</a> */}\r\n                {/* <a class=\"dropdown-item\" href=\"remind.html\">Forgot password?</a> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isError: true,\r\n            errMessage: \"Ooopsy\",\r\n        };\r\n    }\r\n\r\n    handleSubmit = () => this.setState({\r\n        isError: true,\r\n        errMessage: \"Wow is clicked\"\r\n    });\r\n\r\n    render() {\r\n        return (\r\n            <div className='row col-md-6 m-auto'>\r\n                <InfoToast isError={this.state.isError} errMessage={this.state.errMessage} onClick={this.handleSubmit} />\r\n                <Email />\r\n                <Password />\r\n                <SignInBtn />\r\n                <SignUpBtn />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport InfoToast from './info';\r\n\r\nclass Name extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nameChange = this.nameChange.bind(this);\r\n    }\r\n\r\n    nameChange = (e) => { this.props.onChange(e.target.name, e.target.value) };\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"form-row col-12\">\r\n                <div class=\"col-md-6\">\r\n                    <label for=\"validationServer01\">Last name</label>\r\n                    <input type=\"text\" name='lastName' class=\"form-control\" onChange={this.nameChange} data-validator=\"letters\" placeholder=\"Ng\" required />\r\n                    {/* state  */}\r\n                    <div class=\"invalid-feedback\">\r\n                        Only symbols are required\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <label for=\"validationServer02\">First name</label>\r\n                    <input type=\"text\" name='firstName' class=\"form-control\" onChange={this.nameChange} data-validator=\"letters\" placeholder=\"Duong\" required />\r\n                    {/* state  */}\r\n                    <div class=\"invalid-feedback\">\r\n                        Only symbols are required\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Email extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.emailChange = this.emailChange.bind(this);\r\n    }\r\n\r\n    emailChange = (e) => { this.props.onChange(e.target.name, e.target.value) };\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"form-row col-12\">\r\n                <div class=\"col-12\">\r\n                    <label for=\"validationServer03\">Email</label>\r\n                    <input type=\"text\" name='email' onChange={this.emailChange} class=\"form-control\" data-validator=\"email\"\r\n                        aria-describedby=\"validationServer03Feedback\" placeholder=\"rkina7@gmail.com\" required />\r\n                    {/* state */}\r\n                    <div id=\"validationServer03Feedback\" class=\"invalid-feedback\">\r\n                        Incorrect email\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Password extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.passChange = this.passChange.bind(this);\r\n    }\r\n\r\n    passChange = (e) => {\r\n        this.props.onChange(e.target.name, e.target.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"form-row col-12\">\r\n                <div class=\"col-md-6\">\r\n                    <label for=\"validationServer01\">Password</label>\r\n                    <input type=\"password\" name='password' onChange={this.passChange} class=\"form-control\" data-validator=\"password\"\r\n                        placeholder=\"Str0ngPa55%\" required />\r\n                    {/* state  */}\r\n                    <div class=\"invalid-feedback\">\r\n                        Too weak password\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <label for=\"validationServer02\">Repeat Password</label>\r\n                    <input type=\"password\" name='repassword' onChange={this.passChange} class=\"form-control\" data-validator=\"repass\"\r\n                        placeholder=\"Str0ngPa55%\" required />\r\n                    {/* state  */}\r\n                    <div class=\"invalid-feedback\">\r\n                        Password doesn't match\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SignUpBtn extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"col-12 mt-3\">\r\n                <button class=\"btn btn-primary\" type='submit' >Sign Up</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Sign extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShow: true,\r\n            isSigned: false,\r\n            lastName: '',\r\n            firstName: '',\r\n            email: '',\r\n            password: '',\r\n            repassword: ''\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleToast = this.handleToast.bind(this);\r\n    }\r\n\r\n    handleChange = (name, value) => { this.setState({ [name]: value }) }\r\n\r\n    handleSubmit = () => {\r\n        const { lastName, firstName, email, password } = this.state;\r\n\r\n        let data = {\r\n            lastName: lastName,\r\n            firstName: firstName,\r\n            email: email,\r\n            password: password\r\n        }\r\n        data = JSON.stringify(data)\r\n        fetch(\"/api/user/register\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (res) => {\r\n                    this.setState({\r\n                        isSigned: res.signed,\r\n                        isShow: res.error,\r\n                        message: res.message\r\n                    });\r\n                    alert('here1')\r\n                    alert(res.signed)\r\n                })\r\n    }\r\n\r\n    handleToast = () => { this.setState({ isShow: false }) }\r\n\r\n    render() {\r\n        const { isSigned } = this.state;\r\n\r\n        if (isSigned) {\r\n            this.props.history.push('/')\r\n            // return(\r\n            //     <Redirect push to='/' />\r\n            // )\r\n        }\r\n        else {\r\n            return (\r\n                <div className='row col-md-8 m-auto'>\r\n                    <InfoToast isShow={this.state.isShow} message={this.state.message} onClick={this.handleToast} />\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <Name onChange={this.handleChange} />\r\n                        <Email onChange={this.handleChange} />\r\n                        <Password onChange={this.handleChange} />\r\n                        <SignUpBtn onChange={this.handleChange} />\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Sign;","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Route, Switch } from 'react-router-dom/cjs/react-router-dom.min';\nimport Login from './components/login';\nimport Sign from './components/sign';\n\nlet isLogged = false;\n\nclass App extends Component {\n    render() {\n        return (\n            <Router >\n                <div className='container'>\n                    <Switch>\n                        <Route exact={true} path='/' component={Login} />\n                        <Route path='/register' component={Sign} />\n                    </Switch>\n                </div>\n            </Router >\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}